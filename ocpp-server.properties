# Indicates that application should be started without GUI, possible values:  'true/false', default: true
application.gui.mode = false
# Ip on which server will accept OCPP connections, default:0.0.0.0, works in combination with 'application.gui.mode:false'
ocpp.server.ip = 0.0.0.0
# Port on which OCPP server will accept connections, default:8887, works in combination with 'application.gui.mode:false'
ocpp.server.port = 8887
# port on which REST server will accept connections, default:9090, works in combination with 'application.gui.mode:false'
rest.api.port = 8084
# Run ssl server with ssl context, works in combination with 'application.gui
ssl.enabled = false
# Run ssl server with keystore for defined keystore uuid, works in combination with 'application.gui.mode:false'
ssl.keystore.uuid = none
# Indicates if server needs to validate client certificate, works in combination with 'application.gui.mode:false'
ssl.client.auth = false
# Least of features supported by server
ocpp.features.profile.list = Core,FirmwareManagement,RemoteTrigger,LocalAuthList,SmartCharging
# Password that has to be sent by client in order to connect
ocpp.server.auth.password =
# Should ROOT CA be added to certificate chain
certificate.chain.add.root.ca = false
# Certificate valid in minutes
certificate.expiration.minutes = 90
# Version of ocpp signed certificate. Current values are: OCPP_2_0, OCPP_2_0_1
certificate.signed.spec.version = OCPP_2_0
# Choose between signing operators. Available values are: [IONITY, ELAM]. Default value is: IONITY
sign.certificate.feature.operator = ELAM
